ZHL 
====================
---------------------------------------------------------------------------
El flujo para la creación de gráficos es el siguiente:
	1) Dibujo en ASEPRITE con paleta indexada de 4 colores CGA, 320x200. Prestar atención a que la paleta tenga los colores en el order correcto.  
	2) Salvar como .GIF 
	3) Ya en DOS, en Alchemy con -x se comprueba que el fichero usa sólo 4 colores. En PCX ASEPRITE salva siempre como 256 colores y luego en dOS no se pueden abrir los ficheros. 
	4) Las conversiones a pcx alchemy las convierte a 16colores, pero luego se cargan correctamente en Deluxe Paint y PCPAINT tanto en CGA como en EGA 16 colores. Aquí ya se puede trabajar, el problema es que DP sñolo usa la paleta 1 HIGH por lo que los colores son todos brillantes y no podemos ver como quedan otras paletas. 
	5) El Plan b) es usar el PCPAINT que también es un buen editor gráfico aunque no aprovecha tanto la pantalla como el DP. En este caso cargamos directamente
	el .gif exportado de ASEPRITE (el PCX no muestra correctamente la imagen), en este editor ya podemos jugar con las paletas y salvar la imagen final. 

Si el gráfico viene de otra plataforma, por ejemplo Spectrum. 
	1) Salvar el dibujo en .PNG con ASEPRITE
	2) Poner multipaint en el modo correcto, por ejemplo para gráficos CGA uso CPC MODE 1 y cargar el png. (multipaint no abre otro formato gráfico salvo el propio)
	3) Multipaint realiza la conversión de colores en general con bastante acierto. Salvar de nuevo a png. 
	4) Editar bien en multipaint o en Aseprite, en cualquier caso necesitamos un

	Seguir con los pasos anteriores para poder converter a PCX de 4 colores en el caso de CGA. 

! Alchemy no puede leer ficheros png, sí lee ficheros .GIF pero siempre convierte a .pcx de 16 colores. Si forzamos a 4 colores entonces hace dithering!. 
! El único programa que genera pcx de 4 colores es el PCPAINT, ni el DP, ni Alchemy, ni Aseprite lo hacen. 
! PCPAINT escala los gráficos si no tienen el tamaño de la pantalla
! En modo CGA necesitamos pcx de 4 colores. En modo EGA los pcx son de 16colores. 

---------------------------------------------------------------------------
Paletas disponibles en CGA:
https://www.seasip.info/VintagePC/cga.html

Color 0 puede ser cualquiera de los 16 disponibles. 

Palette 0 BACKGROUND, Green, Red, Brown 
	    1 BACKGROUND, Cyan, Magenta, White -> Esta es la típica de los juegos de la época.  
		2 BACKGROUND, Light Green, Light Red, Yellow 
		3 BACKGROUND, Light Cyan, Light magenta, Bright white 

		#include <conio.h>
		#include <graph.h>
		main()
		{
		int x, y, pal;
		_setvideomode( _MRES4COLOR );
		for( y = 0; y < 2; ++y ) {
		for( x = 0; x < 2; ++x ) {
		_setcolor( x + 2 * y );
		_rectangle( _GFILLINTERIOR,
		x * 160, y * 100,
		( x + 1 ) * 160, ( y + 1 ) * 100 );
		}
		}
		for( pal = 0; pal < 4; ++pal ) {
		_selectpalette( pal );
		getch();
		}
		_setvideomode( _DEFAULTMODE );
		}

---------------------------------------------------------------------------
Para convertir las fuentes https://damieng.com/typography/zx-origins/reynolds/ y mantener los píxeles -> https://www.fontconverter.org/, subir el bdf y convertir a .fon. 
Si es necesario modificar las fuentes:
	- Con FZX Editor se puede abrir y salvar los .chr de 768bytes. 
	- Luego con ls PSF tools
			zx2PSF font.chr font.psf --mode=bare
			psf2fnt font.psf font.fnt 
			fnts2fon font.fnt font.fon 
	Y milagrosamente la fuente funciona al cargarla. Como bonus nos aparecen todos los caractereces ascii que no tenemos en spectrum y que ahora pueden ser usados para hacer ASCII Art o como UDG para objetos del inventario o cualquier otra cosa. 

	Una forma sencilla de imprimir las fuentes
		n = _registerfonts( "1.fon" );
		sprintf( buf, "n%d", i );
		_setfont( buf );
		_moveto( 1, 1 );
		for (i=0;i<255;i++)
			{
			sprintf (buf, "%c",i);
			if (i%40==0) _moveto (1,(i/40+1)*8);
			_outgtext( &buf );
			}
		getch();
		_clearscreen( _GCLEARSCREEN );
			
TODO: 
	> Inyección de comandos (autotest)
	> Comando TRANSCRIPT habilita el log a fichero empleando la fecha a un directorio de logs. Se incluyen también todas las pulsaciones de teclas.   
	- La tecla de borrar no siempre elimina los caracteres en modo gráfico. 
	> Empaquetar el directorio de recursos 
	> En modo SVGA las librerias de WATCOM no parecen funcionar al imprimir textos, en modo VGA 640x480 funcionan bien hasta que se encuentran con un carácter > 127. 

06/07.01.2023
	+ Al imprimir los caracteres acentuados por separado se convierten en terminación de palabra y al dividir las palabras puede que una palabra con acento aparezca dividida en dos líneas. Este error sólo permanece en el modo TEXTO.  
    	> He reemplazado las rutinas de impresión de texto de watcom para evitar el bug de color incorrecto con caracteres > 127 (acentos, ñ, etc)
	> ZHL ya compila en modo EGA, VGA a 16 colores (640x480) y SVGA a 256 colores. Sin embargo con algunos problemas: en VGA la rutina de watcom falla cuando se encuentra con caracteres >127, y en SVGA no imprime directamente. 
	

05.01.2023
	> Todas las localidades muestran pantalla en CGA. 
	Salvo algún bug que encuentre esta versión ya está completada. 

04.01.2023 
    > Cargador de gráficos de PCX funcionando :) con escritura directa en memoria de vídeo. 
	Usar hexedit para ver ficheros en bruto.
	+ Errores en la selección del modo CGA con la librería, los colores no eran los correctos. Afortunadamente no ha sido difícil seleccionar correctamente el modo y la paleta llamando directamente a la int10h. Ya tenemos los colores correctos y la imagen se ve como en PCPAINT. Mirando pantallas del Alleycat he recordado que el juego cambiada de paleta al entrar en algunas habitaciones, puedo usar esto para mejorar la ambientación del juego y usar tonos más cálidos dentro de la nave y más fríos en el exterior. 


03.01.2023 
	+ Cambio del flag 0 para funcionar como en NGPAWS. 0 indica luz, 1 indica oscuridad. 
	+ Flag 17 para el color actual: PAPER (4bit) | INK (4bit)
	+ Se cargan las fuentes en formato bitmap .fon para los modos gráficos, aunque faltan algunos ajustes pues las funciones de texto de la librería Watcom funcionan distinto. Hay que añadir también los caracteres con acento, las excalamaciones y las ñ. Corregido con las notas que hay arriba sobre la conversión de fuentes. 
	+ La pantalla no hace scroll al llegar abajo. -> La función de scroll de texto también funciona con fuentes gráficas.  
	+ Al borrar no se eliminan los caracteres en modo gráfico. Las funciones outtext y outgtext imprimen distinto en pantalla, la primera escribe todos los píxeles incluyendo los de fondo lo que nos permite borrar con espacios, la segunda imprime con OR sin modificar el fondo. 
	> En modo CGA/EGA la pantalla se divide para soportar texto en ventana, esto ha funcionado a la primera :-). Ya sólo quedar meter los gráficos en la parte superior. 

02.01.2023

	! He decidido finalmente no meter ANSI art en el juego para evitar problemas de compatibilidad con tarjetas y versiones antiguas de DOS. No hay garantía que la tabla de caracteres CP 437 está completamente soportada al ser caracteres en firmware en el caso de CGA/EGA. Dejaré el logo como un fichero ANSI separado para los curiosos.  
	
	+ Añadidas instrucciones de juego en el menú principal. 
	+ A veces se queda bloqueado al salir del juegp. Añadido función exit() al salir.
	+ Cambiar mensaje de abandonar para que sea de confirmación, en caso de abandonar se regresa al menú principal. Esto es muy típico de juegos más actuales.  
	+ ZHL Logo en ASCII ART :), tengo que ver como pasar el .CSV a un formato binario que podamos usar. 
    + Compilación en CGA y EGA funcionando aunque con errores al dibujar el texto. 
	+ Modo gráfico CGA 320x200 4 colores 
 	+ Modo gráfico EGA 320x200 16 colores. 
   
01.01.2023
	Después de mudarnos de nuevo y por fin ordenar la habitación y librarme de gran cantidad de cajas, vuelvo a retomar este proyecto. Hace un par de años empecé a portar el parser a DOS usando WATCOM. Estos dÃ­as de vacaciones estoy aprovechando para retomarlo y sacar una versión de ZHL en modo TEXTO, CGA y EGA. 

	La versión del parser tiene los añadidos que implementé para un proyecto intermedio que no llegó a ver la luz y retoma la versión 5 de ZHL. 
	
    He decidido pasarlo a watcom en modo 386 protegido, de este modo tengo acceso a la memoria de forma lineal en DOS y no tengo que preocuparme por los bancos de memoria de 64Kb que tantos problemas me han dado en el pasado. Realmente sobredimensiona todo el sistema, pues con un 286/8086 podrÃ­amos correr seguramente la aventura sin problemas pero con vistas al futuro me ayudarÃ¡ a escribir aventuras sin preocuparme por la gestiÃ³n de la memoria. 

    En ParserLoop tengo hardcodeado el color del texto de las descripciones, lo he eliminado pues se puede sustituir por la misma llamada dentro del proceso 1 y de este modo queda accesible para el programador. 
	
    Pues ya tengo el juego compilado y funcionando, con entrada por teclado, y scroll de ventana. Todo ha ido realmente bien. 
	
+ Errores en caracteres ASCII extendidor. Referencia: https://theasciicode.com.ar/
Para imprimir los caracteres 
    gotoxy (1,1);
	for (salir=0;salir<254;salir++)
		{
		sprintf (buf, "%c",salir);
		_outtext (buf);
		}
    Veo que estÃ¡n todos, seguramente el problema venga por usar un editor en ISO 8859-15 en lugar de UTF-8. 
    En la rutina de writeText en modo TEXTO no podemos usar los cÃ³digos > 127 para comprimir cadenas, pues las tablas de caracteres son fijas. No podemos usar la tÃ©cnica de reemplazar algunos caracteres justo antes del 127 por los que necesitamos. Esto quiere decir que usando 1 byte por caracter no podemos tener compresiÃ³n de textos en la versiÃ³n de PC si se usa EspaÃ±ol. 

    + Arreglado el fallo por el cual se podÃ­a borrar el prompt del usuario. 
    + Arreglado el fallo por el cual el getkey se queda atascado,el motivo es que en DOS hay teclas que devuelven dos cÃ³digos, para ver fÃ¡cilmente los cÃ³digos:

        int ch;

        while ((ch = _getch()) != 27) /* 27 = Esc key */
        {
            printf("%d", ch);
            if (ch == 0 || ch == 224)
                printf (", %d", _getch ()); 
            printf("\n");
        }

        printf("ESC %d\n", ch);

    por ejemplo los cursores, avanzar pÃ¡gina e incluso cuando se intenta sacar un acento con una tecla que no es una vocal.

	+ Algunos errores corregidos que ya se venÃ­an arrastrando desde la Release 5 para Spectrum: se podÃ­a borrar el prompt y el scroll dejaba a veces una lÃ­ne en blanco. 
	+ Parcheado en la rutina de impresiÃ³n un bug de la librerÃ­a de watcom al imprimir caracteres >127 el color de la tinta estÃ¡ 1 por encima del valor deseado. 
    > La aventura ya funciona al completo en modo TEXTO :-D, he tardado menos de un dÃ­a en tenerla en marcha. 
	> En DOSBOX la aventura es perfectamente jugable a 4.77MHz, aunque se necesita un 386 para poder aprovechar la memoria lineal. 
	> AÃ±adida funciÃ³n para generar las cajas de citas tan tÃ­picas de INFORM-6.

07.11.2019

 Localidades
----------------------------

Area en la nave

Panel de control
Objetos: Escaleras, parabrisas, consola, mandos, nieve, un asiento

Nodo central 
Objetos: Acceso a la esclusa

Esclusa 
Objetos: Trajes, botones de abrir y cerrar, puerta de entrada y puerta de salida, mensaje de peligro

AlmacÃ©n
Objetos: escaleras, paquetes y casilleros, fisura en una de las paredes 

Area: Exterior 

Entrada a la esclusa 
Objetos: Escaleras de entrada, nieve, JÃºpiter de fondo, la silueta del almacÃ©n

Entrada al almacÃ©n 
Objetos: Teclado numÃ©rico, puerta blindada, almacÃ©n, rejilla de ventilaciÃ³n

AlmacÃ©n
Sala 1
Objetos: Paquetes con semillas
Sala 2 
Objetos: BÃ³veda, paquete azul

GrÃ¡ficos raster basados en las librerÃ­as que ya utilizamos en minif. Ver cuanto podemos meter en 16K para permitir juegos multicarga de 128Kb (o mÃ¡s...). 

AÃ±adir pnj mÃ¡s adelante no es complicado, pues se trata de tener una estructura nueva para ese tipo de objeto. 

El cursor es una casilla que parpadea con un OR, ver que tal funciona sino podemos hacer una inversiÃ³n de atributos pero queda mucho mÃ¡s cutrecito. 

En la parte inferior seleccionamos entre inventario, mapa y lista de quest activas.
---------------------------------------------------------------------------------------------------------

10.03.2019 
	> Un poco mÃ¡s de test...
	Algunos detalles sueltos:
	En la nave
	+	x interior
	en el exterior
	+ x cielo
	+x cristales
	+x europa
	+x techo...
	+x paredes...
	+ el ordenador sigue hablando delante del almacÃ©n
	+teclear 32768 no funciona...
	+parece que el mensaje de (en el teclado) se queda activado...
	+teclear 32768 en el teclado sÃ­ funciona...
	en el almacÃ©n
	+coger contenedor
	> Â¡Pero el juego se puede terminar! :-)
	> VersiÃ³n de Spectrum funcionando sin problemas: 9855bytes free, DDBB 19800bytes
	> Release 3 con algunos fallos tontos corregidos

03.03.2019
> Teclado numÃ©rico funciona
> Si la compuerta se abre no podemos volver al interior de la nave 
> Poner el traje si estÃ¡ presente lo coje primero
> AÃ±adido testeo automÃ¡tico, se acabÃ³ teclear los comandos :-) 
> AÃ±adir colores para las conversaciones con el ordenador...
> Fin de juego al recuperar el paquete
	
02.03.2019 
 MuchÃ­simo trabajo y apenas puedo dormir, veamos si puedo avanzar un poco.
 + En el exterior y dentro la esclus una vez despresurizada nos podemos
 quitar el traje.
 + El ordenador sigue hablando aunque no estemos en la nave...

26.02.2019
> El sistema de atributos bÃ¡sicamente HAT/HASN funciona
como un comprobado bit a bit DESCENDENTE empezando por el bit 0 del FLAG 59 
y desciende hasta llegar a 255. Es decir que realmente se pueden comprobar
bit a bit sÃ³lo 32 flags 

Flag 59 bit 0 -> Atributo 0 -> Current Object 
Flag 58 bit 0 -> Atributo 8 -> Current Object 
Flag 58 bit 7 -> Atributo 15 -> Current Object 
...
Flag 29 bit 0 -> Atributo 240 
Flag 29 bit 7 -> Atributo 247 
Flag 28 bit 0 -> Atributo 248
Flag 28 bit 7 -> Atributo 255

> AdemÃ¡s los atributos de los objetos no se pueden cambiar, toca almacenar
los atributos en flags y copiarlos sobre el Fag 59 y 58 para que funcione
el HAS HASN
	+ La comprobacion de la apertura de la compuerta no funciona
	+ No se puede ir al interior de la nave con el traje puesto. Hay que quitÃ¡rselo y dejarlo siempre en la esclusa. 

25.02.2019 
> MÃ¡s descripciones, vocabulario y movimientos entre localidades
> El usuario puede cambiar el color del texto y el fondo
> Un poco de playtest

AsÃ­ a bote pronto: 32Kb de Aventura - 3Kb de la BBDD de grÃ¡ficos (aunque vaya vacÃ­a)
Databaseend 52079, en el Spectrum Editor grÃ¡fico nos dice que quedan 11367bytes

Teniendo en cuenta que la aventura ya estÃ¡ prÃ¡cticamente completa, salvo pulir
algunos fallos quizÃ¡ quepan 2 o 3 pantallas en bitmap (aprox 1.3Kb), o unas
cuantas mÃ¡s vectoriales si me aclaro con el editor grÃ¡fico. 

23.02.2019
> He probado a generar una versiÃ³n para spectrum y funciona!!! :-D
> Ya tenemos repositorio en GitHub para que el cÃ³digo no se pierda como pasÃ³ ayer con el Synctoy y el portÃ¡til
+ Eliminar mensajes de 'QuÃ© quieres que haga'... 
> Poner/quitarse el traje

21.02.2019 
+ Bug delas conexiones solucionado. Es debido a que tenÃ­a una entrada para imprimir verbo y nombre sin DONE. He aÃ±adido una entrada al final como NOTDONE
y todo funciona de nuevo. 


20.02.2019 
> Ahora se le pueden dar Ã³rdenes al ordenador tipo: ordenador encender consola
> MÃ¡s descripciones y vocabulario, verbos de relleno como saltar, tocar, etc...
> AÃ±adido el final del juego
- Han dejado de funcionar las conexiones...
compi
19.02.2019
> Mejorando las conversaciones con el ordenador, en lugar de Usar ordenador como un verbo se usa como nombre propio.

17 Febrero 2019
> Recientemente se ha liberado el DAAD, como ZEUR es una aventura muy corta voy a intentar portarla a DAAD para ver como es la experiencia
> Todas las localidades y conexiones implementadas
> Organizando un poco el cÃ³digo, si hay memoria se podrÃ­a importar buena parte de la librerÃ­a de ngpaws... :-m
> Definiendo atributos para masculino, femenino, etc
> Todos los mensajes en el juego, incluidos las conversaciones con el ordenador. En torno a 14Kb de BBDD..., creo que va a ir justito para 48Kb.
> Un poco de ASCII art con las ventanas para la intro. Sin demasiados problemas, el DAAD se deja querer :-)
> El ordenador ya puede hablar :-)

23 de Julio 2016
 > Al teclear sin indicar el teclado se aÃ±ade de forma automÃ¡tica.
 
22 de Julio
> Ahora el comando de salidas es opcional. Incorporamos las salidas en las descripciones. 
> Algunas correcciones para "del"...
> AÃ±adido salir en la esclusa, y entrar en el exterior de la nave.
+ No se puede entrar en la nave con el traje puesto despuÃ©s de despresurizar.


20 de Julio
+ Mejorar el listado de salidas para que tenga en cuenta las puertas y mÃºltiples salidas.	 
+ Usar artÃ­culos definidos y gÃ©neros correctamente. 

19 de Julio

> MÃ¡s texto para la cabeza parlante del legionario. 

Cerrar el primer capÃ­tulo que termina cuando el jugador lleva la cabeza a la nave. 
- Usar artÃ­culos definidos y gÃ©neros correctamente. 
- Actualizar la librerÃ­a de decorados para evitar crear muchos objetos innecesarios.
- AÃ±adir el comando de ayuda.

Sobre el segundo capÃ­tulo...

En el tenedor han encontrado un portal como el que investigaba la legiÃ³n espacial. El jefe
del tenedor ha contratado a ZEUR para que extraiga el paquete del almacÃ©n en la base de Europa. Ha sobornado
a los guardias para que no estÃ©n en su puesto durante unas horas mientras se realiza la recogida. Quiere
la cabeza del legionario para extraer la informaciÃ³n acerca de como operar los portales y averiguar lo que
se encuentra mÃ¡s allÃ¡. 

 En el segundo capitulo Ellie Right es una periodista que se ha unido al grupo de soldados romanos espaciales que ha localizado un portal completo y se disponen a activarlo. 

18 de Julio de 2016

  Algunos datos sobre Europa:
* Orbita Jupiter en 3 dias y medio.
* Un lado de Europa mira constantemente a Jupiter.
* Es un poco mÃ¡s pequeÃ±a que la Luna con 3100km de diÃ¡metro.
* Es uno de los objetos con la orografÃ­a mÃ¡s lisa del sistema solar. 
* 10m picos llamados penitentes en el ecuador. 
* La radiaciÃ³n en la superficie se estima en torno a 5400mSv al dÃ­a, un humano
expuesto a semejante nivel tendrÃ­a heridas graves o morirÃ­a despuÃ©s de un dÃ­a.
* La atmosfera estÃ¡ compuesta de oxÃ­geno molecular. 
* Gravedad 1.314 m/s^2 (en torno a 1/8 de la Tierra)
* Velocidad de escape: 2025 km/s.
* Temperatura media en torno a 170ÂºC bajo cero.
+ Mandos para operar el airlock...
	+ BotÃ³n verde cierra el airlock, BotÃ³n rojo abre el airlock
+Muerte al abrir el airlock sin el traje
+El juego termina con Ã©xito al llevar la caja azul a la nave...
+Arreglar el listado de objetos para eliminar el 'aquÃ­'
+el ordenador habla directamente en la nave...

17 de Julio de 2016
> Ya tengo las conversaciones con el ordenador funcionando. No ha sido tan dificil y el poder meter todo en una tabla mola mucho :)
> MÃ¡s descripciones para las localidades y algunos objetos.
+ No se puede salir de la nave sin llevar puesto el traje
+ Listar las salidas...
+ Teclear en el keypad de entrada del almacÃ©n...

El personaje es un robot fabricado por la nave para conseguir el paquete. Si
el robot muere, envÃ­a otro. A partir del segundo el jugador deberÃ­a empezar
a sospechar que algo sucede. El robot tiene la imagen de si mismo de un humano,
el original que estÃ¡ descansando en un compartimento secreto de la nave. 


16 de Julio 2016
> Sigo profundizando en I7, es como empezar de cero salvo por los conceptos. La implementaciÃ³n basada
en reglas tiene buena pinta, pero seguramente tendrÃ© que meter cÃ³digo I6 tarde o temprano. 
> Ya tengo el mapa completo

 Los problemas a resolver son los siguientes:
	- Encontrar el risco/almacÃ©n en el planeta
	- Entrar en el almacÃ©n
	- Localizar la caja correcta
	- Teclear en el teclado de la entrada
	- Hablar con ordenador, basado en temas: preguntar a ordenador por; ordenador, xxyy.
	- El nombre del ordenador es Tod. -> tod, xxyy. 
	- Regreso a la nave -> ActÃºa el simbionte -> Pesadilla en la playa.
	

14 de Julio de 2016

 La historia ha progresado un poco en mi cabeza. Se va a tratar de una precuela
 a Life&Death at the Fork. En esta aventura, el protagonista consigue la famosa
 caja que luego ha de entregar en el Fork. El personaje principal es el mismo
 que aparece en el desierto arrastrando la caja por la arena.
 
 Momento: Noche,
 UbicaciÃ³n: Un risco en un planeta congelado (Europa). EstÃ¡ lloviendo copiosamente. 
 Un portÃ³n blindado impide el paso a un almacÃ©n. 
 
 Sinopsis: Un repartidor aterriza en Europa para recoger un paquete cuyo destino
 es el tenedor del diablo en Marte. Cuenta con unas coordenadas y un nÃºmero secreto
 que ha de introducir en el mando de la puerta de entrada. El almacÃ©n estÃ¡ repleto
 de cajas. Las cajas albergan gran cantidad de animales y otras formas de vida
 en estado de hibernaciÃ³n. 
 
 La caja a recoger contiene un cerebro congelado de un telÃ©pata. Este cerebro
 se activarÃ¡ y comenzarÃ¡ a jugar con la mente del repartidor para que le ayude
 a escapar y de ese modo no llegar al Tenedor.
 


13.07.2016
Mirando los fuentes de ZAK, he visto que se puede incrustar cÃ³digo directamente de I6. Esto facilita mucho
la transiciÃ³n, y sobre todo el poder reutilizar algunas librerias de I6 como los menÃºs, grÃ¡ficos y sonido. 



19.06.2016

Notas para programar en las nuevas release de Inform: 

Enlaces imprescindibles:

http://wiki.caad.es/Inform7_6L02

Los manuales:
 Recipe Book
http://inform7.com/learn/man/RB_1_1.html
 Programming Book
http://inform7.com/learn/man/WI_3_18.html

El tutorial:
https://sites.google.com/site/inform7sp/inform-7/4-escenas-ayuda-desambigueacion-y-cocodrilos

Syntaxis y relaciÃ³n con I6
http://inform7.com/learn/documents/I7_syntax.txt
https://emshort.wordpress.com/how-to-play/writing-if/inform-7/i6-entry-points-translated/